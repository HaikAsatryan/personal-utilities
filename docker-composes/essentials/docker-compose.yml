volumes:
  rabbitmq:
    driver: local
  redis:
    driver: local
  postgres:
    driver: local
  # elasticsearch:
  #   driver: local
  # kibana:
  #   driver: local
  # pgadmin:
  #   driver: local
  # redisinsight:
  #   driver: local
  # oracle_db:
  #   driver: local

services:

  # ---------------------------------------------------------------------------------
  # Elastic search
  # ---------------------------------------------------------------------------------

  # elasticsearch:
  #   container_name: elasticsearch
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
  #   restart: always
  #   ports:
  #     - 9200:9200
  #   environment:
  #     - bootstrap.memory_lock=true
  #     - discovery.type=single-node
  #     - xpack.security.enabled=false
  #     - xpack.security.http.ssl.enabled=false
  #     - xpack.security.transport.ssl.enabled=false
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1           
  #   volumes:
  #     - elasticsearch:/usr/share/elasticsearch/data
  #   healthcheck:
  #     test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 5

  # ---------------------------------------------------------------------------------
  # Kibana
  # ---------------------------------------------------------------------------------

  # kibana:
  #   depends_on:
  #    elasticsearch:
  #      condition: service_healthy
  #   container_name: kibana
  #   image: docker.elastic.co/kibana/kibana:8.13.0
  #   restart: always
  #   ports:
  #     - 5601:5601
  #   environment:
  #     - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
  #   volumes:
  #     - kibana:/usr/share/kibana/data   

  # ---------------------------------------------------------------------------------
  # PgAdmin
  # ---------------------------------------------------------------------------------

  # pg-admin:
  #   container_name: pg_admin
  #   image: dpage/pgadmin4:latest
  #   restart: always
  #   ports:
  #     - "5050:80"
  #   #in pgAdmin set Host name/address to host.docker.internal or postgres_db in linux
  #   environment:
  #     - PGADMIN_DEFAULT_EMAIL=test@pandatech.it
  #     - PGADMIN_DEFAULT_PASSWORD=test
  #   volumes:
  #     - pgadmin:/var/lib/pgadmin

  # ---------------------------------------------------------------------------------
  # RabbitMQ
  # ---------------------------------------------------------------------------------

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.13.1-management-alpine
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: test
      RABBITMQ_DEFAULT_PASS: test
    volumes:
      - rabbitmq:/var/lib/rabbitmq

  # ---------------------------------------------------------------------------------
  # Redis
  # ---------------------------------------------------------------------------------

  redis:
    container_name: redis
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis:/data

  # ---------------------------------------------------------------------------------
  # Redis Insight
  # ---------------------------------------------------------------------------------

  # redisinsight:
  #   container_name: redisinsight
  #   image: redis/redisinsight:latest
  #   restart: always
  #   ports:
  #     - "5540:5540"
  #   volumes:
  #    - redisinsight:/db

  # ---------------------------------------------------------------------------------
  # Postgres
  # ---------------------------------------------------------------------------------

  postgres_db:
    container_name: postgres
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
    ports:
      - "5432:5432"  
    volumes:
      - postgres:/var/lib/postgresql/data

  # ---------------------------------------------------------------------------------
  # Oracle
  # ---------------------------------------------------------------------------------

  # oracle_db:
  #   container_name: oracle-free
  #   image: container-registry.oracle.com/database/free:latest
  #   restart: always
  #   ports:
  #     - "1521:1521"
  #     - "5500:5500"
  #   environment:
  #     - ORACLE_PWD=test
  #   volumes:
  #     - oracle_db:/opt/oracle/oradata

  # ---------------------------------------------------------------------------------
  # Some .Net application
  # ---------------------------------------------------------------------------------
      
  # pandawebapi:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.Local
  #   container_name: dotnet_application
  #   hostname: pandawebapi
  #   restart: always
  #   ports:
  #     - "80:80" # Change the ports as necessary for your application
  #   depends_on:
  #     - postgres_db
  #     - rabbitmq
  #     - redis
  #     - elasticsearch
  #   environment:
  #     - ASPNETCORE_ENVIRONMENT=Local
  #     - PANDAVAULT_URL=https://bevault.pandatech.it
  #     - PANDAVAULT_SECRET=0c579832-968e-463e-a69e-f9634332d29e
  #   volumes:
  #     -  ~/.aspnet/https:/https:ro      